# Maintainer: Tales A. Mendonça <talesam@gmail.com>
# Contributor: Narayan Silva <narayan.song@gmail.comm>

pkgname=biglinux-game-config 
pkgdesc="BigLinux Game Configuration is a package to automatize installation and configuration of apps related to gaming."
provides=('comm-game-config')
conflicts=('comm-game-config')
replaces=('comm-game-config')
depends=(
    'corectrl'
    'gwe'
    'steam'
    'steam-acolyte'
    'mangohud'
    'heroic-games-launcher'
    'proton-ge-custom-bin'
    'linux-steam-integration'
    'python-steam'
)

optdepends=(
    
)

pkgver=$(date +%Y%m%d)
pkgrel=$(date +%H%M)
arch=('any')
license=('MIT')
url="https://github.com/biglinux/${pkgname}"
source=("git+${url}.git")
md5sums=('SKIP')
install=pkgbuild.install

prepare() {
    cd "${srcdir}/${pkgname}"
    # Add any preparation steps here, if needed
}

build() {
    cd "${srcdir}/${pkgname}"
    # No build steps needed as we're using pre-translated files
}

package() {
    cd "${srcdir}/${pkgname}"

    # Determine the correct source directory
    if [ -d "${pkgname}" ]; then
        srcdir="${srcdir}/${pkgname}/${pkgname}"
    else
        srcdir="${srcdir}/${pkgname}"
    fi

    # Create a script to install optional dependencies
    mkdir -p "${pkgdir}/usr/bin"
    cat > "${pkgdir}/usr/bin/comm-game-install-deps" << 'EOF'
#!/bin/bash
# Install all gaming dependencies
pacman -S --needed --noconfirm corectrl gwe steam steam-scolyte mangohud heroic-games-launcher proton-ge-custom-bin linux-steam-integration python-steam
EOF
    chmod 755 "${pkgdir}/usr/bin/comm-game-install-deps"

    # Create a script to configure Corectrl
    cat > "${pkgdir}/usr/bin/comm-game-setup-corectrl" << 'EOF'
#!/bin/bash

# Colors
red='\033[0;31m'
green='\033[0;32m'
blue='\033[0;34m'
yellow='\033[1;33m'
nc='\033[0m' # No Color

# 1. Add AMD GPU parameter to GRUB
setup_grub_parameter() {
    if grep -q "amdgpu.ppfeaturemask=0xffffffff" /etc/default/grub; then
        echo -e "${green}GPU parameter já configurado no GRUB.${nc}"
    else
        # Backup the original file
        cp /etc/default/grub /etc/default/grub.bak
        
        # Add parameter to GRUB_CMDLINE_LINUX_DEFAULT
        sed -i 's/\(GRUB_CMDLINE_LINUX_DEFAULT="\)/\1amdgpu.ppfeaturemask=0xffffffff /' /etc/default/grub
        
        # Update GRUB
        grub-mkconfig -o /boot/grub/grub.cfg
        
        echo -e "${green}✓ Parâmetro AMD GPU adicionado ao GRUB e configuração atualizada!${nc}"
    fi
}

# 2. Create Polkit rule for Corectrl
setup_polkit_rule() {
    local polkit_dir="/etc/polkit-1/rules.d"
    local polkit_file="${polkit_dir}/90-corectrl.rules"
    
    mkdir -p "$polkit_dir"
    
    # Get all users with UID >= 1000
    getent passwd | awk -F: '$3 >= 1000 && $3 < 65534 {print $1}' | while read -r username; do
        # Create or update the polkit rule file
        cat > "$polkit_file" << EOL
polkit.addRule(function(action, subject) {
    if ((action.id == "org.corectrl.helper.init" ||
         action.id == "org.corectrl.helperkiller.init") &&
        subject.local == true &&
        subject.active == true &&
        subject.isInGroup("$username")) {
            return polkit.Result.YES;
    }
});
EOL
        echo -e "${green}✓ Regra Polkit configurada para usuário $username${nc}"
    done
    
    # Set permissions
    chmod 644 "$polkit_file"
}

# Run configuration functions
setup_grub_parameter
setup_polkit_rule

echo -e "${blue}═══════════════════════════════════════════${nc}"
echo -e "${green}     Configuração do Corectrl Concluída    ${nc}"
echo -e "${blue}═══════════════════════════════════════════${nc}"
echo -e "${yellow}Reinicie o sistema para aplicar todas as alterações.${nc}"
EOF
    chmod 755 "${pkgdir}/usr/bin/comm-game-setup-corectrl"

    # Install files
    local dirs=("usr" "etc" "opt")
    for dir in "${dirs[@]}"; do
        if [ -d "${srcdir}/${dir}" ]; then
            cp -a "${srcdir}/${dir}" "${pkgdir}/"
        fi
    done

    # Install license file if present
    if [ -f "LICENSE" ]; then
        install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
    fi

    # Install documentation if present
    if [ -f "README.md" ]; then
        install -Dm644 README.md "${pkgdir}/usr/share/doc/${pkgname}/README.md"
    fi
}
